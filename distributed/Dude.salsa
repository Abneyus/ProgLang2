module distributed;

import java.io.*;
import java.util.*;

behavior Dude{
  int id;
  String host;
  int port;
  int priority;
  int tolerance;
  int actors;

  boolean active;
  boolean pastLeader;

  Writer writeroni;

  Dude left;

  Dude(int id, String host, int port, int priority, int tolerance, int actors, Dude left, Writer writeroni) {
    this.id = id;
    this.host = host;
    this.port = port;
    this.priority = priority;
    this.tolerance = tolerance;
    this.actors = actors;

    this.active = false;
    this.pastLeader = false;

    this.left = left;

    this.writeroni = writeroni;
  }

  void consider(int candidate, int canditatePriority, int timestamp, int elections)
  {
    if(elections == actors)
    {
      writeMessage("End of simulation");
    }
    else if(candidate == this.id)
    {
      active = true;
      pastLeader = true;
      writeroni <- write("ID=" + this.id + " became leader at t=" + timestamp + "\n");
      tick(timestamp, timestamp, this.id, 0, elections);
    }
    else
    {
      if(canditatePriority > this.priority)
      {
        this.left <- consider(candidate, canditatePriority, timestamp, elections);
      }
      else if(!pastLeader)
      {
        this.left <- consider(this.id, this.priority, timestamp, elections);
      }
      else
      {
        this.left <- consider(candidate, canditatePriority, timestamp, elections);
      }
    }
  }

  void tick(int timestamp, int electionTime, int presidentID, int revolts, int elections)
  {
    if(presidentID == this.id)
    {
      if(revolts > ((actors-1)/2))
      {
        writeroni <- write("ID=" + this.id + " was deposed at t=" + timestamp + "\n");
        active = false;
        consider(-1, -1, timestamp+1, elections+1);
      }
      else
      {
        left <- tick(timestamp+1, electionTime, presidentID, revolts, elections);
      }
    }
    else if(timestamp - electionTime > tolerance && timestamp - electionTime - actors < tolerance)
    {
      writeroni <- write("ID=" + this.id + " revolted at t=" + timestamp + "\n");
      left <- tick(timestamp+1, electionTime, presidentID, revolts+1, elections);
    }
    else
    {
      left <- tick(timestamp+1, electionTime, presidentID, revolts, elections);
    }
  }

  void setLeft(Dude left)
  {
    this.left = left;
  }

}
